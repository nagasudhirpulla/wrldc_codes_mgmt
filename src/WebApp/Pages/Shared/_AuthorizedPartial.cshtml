@using Microsoft.AspNetCore.Identity;
@using Core.Entities;
@using Application.Users;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


@if (SignInManager.IsSignedIn(User))
{
    @if (User.IsInRole(SecurityConstants.AdminRoleString))
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Manage
            </a>
            <ul class="dropdown-menu">
                <li class="nav-item">
                    <a class="nav-link text-dark" asp-page="/Users/Index">Users</a>
                <li />
            </ul>
        </li>
    }
    <li class="nav-item dropdown">
        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
            Create Code Request
        </a>
        <ul class="dropdown-menu">
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/OutageRequests/CreateApprovedOutageReq">Approved Outage Code Request</a>
            <li />
            <li class="nav-item">
                <a class="nav-link text-dark" asp-page="/OutageRequests/CreateOutageRevivalReq">Revival Code Request</a>
            <li />
        </ul>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-page="/CodeRequests/Index">Code Requests</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-page="/Users/Details">My Details</a>
    </li>
}
